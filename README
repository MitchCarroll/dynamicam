A program that dynamically creates a digital camoflage pattern based on a 
basic perlin noise fractal process. The user defines the desired size, 
number of colors, the hexidecimal value for the desired colors, and the 
number of 'layers' and the dimensions of each layer in the pattern.
The end result is a customized camoflage pattern that is composed of blocks of
color, each of which is composed of smaller blocks of color, and so forth.
The color transitions smoothly from block to block, and the resulting pattern
is tilable (given that the layers are all power-of-two).

TODO:
Add better command line parsing
Add better color gradient generation
    Color output should be a gradient of colors including solids, and dithers
Add better image outputs (e.g.: JPG, PNG, etc.)
Incorporate default power-of-two layers implicitly.
Add some image analysis tools to extract an optimal color pallet and spatial frequencies per color (probably Fourier Transform).
Use a better type of fractal that incorporates given spatial frequencies.
Better input file format with comment rejection, and tagged data fields. Probably a version number too.
